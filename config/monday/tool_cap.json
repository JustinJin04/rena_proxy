{
  "tool_capabilities": {
    "get_board_items_by_name": {
      "description of the tool": "Fast single-board title search. Finds items on one board by full or partial name and returns compact item metadata (id, name, group id/title) plus compact column_values (id/type/text/value) so the assistant can act immediately (post an update, attach a doc link, change columns, copy/move).",
      "what is a description of the arguments of the tool": [
        "boardId (number) — Numeric board ID to search (required).",
        "term (string) — Full or partial item name / indexed text to match (required)."
      ],
      "which other tools are commonly used with this tool": [
        "get_board_info — confirm columns, groups and permissions before structural changes.",
        "create_update — post an update to a found item.",
        "create_doc / read_docs — create or fetch docs to attach or reference for a found item.",
        "create_item — create a new item when no match is found.",
        "all_monday_api — when you need extra fields, cross-board results or more complex filtering."
      ],
      "what kinds of queries are best for this tool": [
        "Quickly find one or a few items on a specific board by title or partial title.",
        "Obtain an item id and compact column_values so the assistant can perform immediate follow-ups (post update, attach doc link, set a status)."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "Cross-board or account-wide searches — this tool searches a single board only.",
        "Requests that need full update bodies or large attachments — use read_docs or all_monday_api.",
        "Complex multi-column filtered searches or custom field selections — use all_monday_api."
      ],
      "what are the outputs of this tool": [
        "Array of matched items with id, name, group id/title and compact column_values (id/type/text/value when available).",
        "Empty array when no matches found.",
        "Structured error object for API issues (USER_UNAUTHORIZED/403, INTERNAL_SERVER_ERROR/500, COMPLEXITY_BUDGET_EXHAUSTED/429) including request_id when available."
      ],
      "which tools to call if this tool is not successful": [
        "get_board_info — verify the board exists and confirm token/permissions if you see USER_UNAUTHORIZED.",
        "all_monday_api — run a custom items query (cross-board, extra fields or different filters).",
        "workspace_info / list_workspaces — if you suspect the item lives in a different workspace/board."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (custom items query) — can search across boards and return arbitrary item fields with complex filters."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_board_items_by_name for fast single-board name lookups and immediate follow-up actions.",
        "Use all_monday_api when you need precise field selection, cross-board results, or complex filters and pagination control."
      ]
    },
    "get_board_activity": {
      "description of the tool": "Retrieve board-level activity events for a board in a specified time range. Returns event metadata (who/what/when) plus event-specific metadata (item_id, column_id, previous/new values) for audits, debugging, or summaries.",
      "what is a description of the arguments of the tool": [
        "boardId (number) — The id of the board to fetch activity for (required).",
        "fromDate (string, ISO8601) — Start of the activity window (optional; defaults to ~30 days ago).",
        "toDate (string, ISO8601) — End of the activity window (optional; defaults to now)."
      ],
      "which other tools are commonly used with this tool": [
        "get_board_info — map activity entries to column/group names and confirm permission level.",
        "get_users_by_name — resolve user ids to names/emails for readable reports.",
        "all_monday_api (audit_logs) — for account-level or more flexible audit queries if needed."
      ],
      "what kinds of queries are best for this tool": [
        "Retrieve recent board-level changes (column value changes, item moves, creations, deletions) and who performed them.",
        "Investigate a time-bounded sequence of events on one board (e.g., last 7/30/90 days) for change summaries or debugging."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "Returning full update bodies or large attachments (activity returns metadata only) — use all_monday_api updates or read_docs for content.",
        "Complex account-wide audit searches — use all_monday_api (audit_logs) for account-level queries."
      ],
      "what are the outputs of this tool": [
        "Activity entries with timestamp (ISO8601), event type/name, user id and activity_metadata (item_id, column_id, prev/new values when available).",
        "Empty list when no events in range, or structured errors for API issues (USER_UNAUTHORIZED/403, INTERNAL_SERVER_ERROR/500, COMPLEXITY_BUDGET_EXHAUSTED/429) including request_id."
      ],
      "which tools to call if this tool is not successful": [
        "get_board_info — verify board ID and token access if USER_UNAUTHORIZED.",
        "all_monday_api (audit_logs) — run account-level or more flexible audit queries.",
        "Retry with a narrower date range or implement pagination/backoff if encountering complexity/429 errors."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (audit_logs/query) — more flexible and account-wide audit queries."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_board_activity for straightforward, board-level audit lookups.",
        "Use all_monday_api for account-wide audits or when you need filters/fields not present in this helper."
      ]
    },
    "get_board_info": {
      "description of the tool": "Return parsed, comprehensive board metadata: name, id, workspace, groups, visible columns (ids, types, settings), owners, URL and permissions. Use before creating/updating items or columns to build valid payloads and confirm permission level.",
      "what is a description of the arguments of the tool": [
        "boardId (number) — The board to retrieve metadata for (required)."
      ],
      "which other tools are commonly used with this tool": [
        "get_board_items_by_name — to find items after you have columns/group ids.",
        "get_column_type_info — to check column JSON schema before creating complex columns.",
        "create_column / create_item — when adding columns or items you need exact ids/types.",
        "all_monday_api — when you need nested fields or fields not provided by the helper."
      ],
      "what kinds of queries are best for this tool": [
        "Get column IDs and column types so you can build valid columnValues JSON for create_item or change_multiple_column_values.",
        "Understand groups, owners and permission settings before making structural changes.",
        "Confirm whether a Doc column exists (doc type) and get its column id if present."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "Fetching full update bodies or document markdown — use read_docs or all_monday_api for content.",
        "Complex cross-board or account-level queries — use all_monday_api."
      ],
      "what are the outputs of this tool": [
        "Board metadata: id, name, description, state, kind, url, items_count and workspace info.",
        "Columns: list with id, type and settings (status label JSON, relation ids, etc.).",
        "Groups, owners and permission settings and the authenticated user's access_level.",
        "Errors for access problems (USER_UNAUTHORIZED/403) or transient server errors (INTERNAL_SERVER_ERROR/500) including request_id."
      ],
      "which tools to call if this tool is not successful": [
        "list_workspaces — confirm the workspace/board availability if boardId not found or board moved.",
        "all_monday_api — craft a custom board query if the helper fails or you need additional fields.",
        "Ask the user to re-authorize or check token permissions if you get USER_UNAUTHORIZED."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (custom Board query) — can request any board fields or nested objects."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_board_info for a ready-made, parsed snapshot of the board (convenient for most tasks).",
        "Use all_monday_api when you need additional nested fields or a custom selection of properties."
      ]
    },
    "get_users_by_name": {
      "description of the tool": "Search account users by full or partial name and return matching user records (id, name, email when available). Useful to resolve owner/assignee names to IDs for mutations or to present choices to users.",
      "what is a description of the arguments of the tool": [
        "name (string) — Full or partial name to search for (partial matches supported)."
      ],
      "which other tools are commonly used with this tool": [
        "get_board_info — map creator/owner IDs to user records.",
        "create_item / change_multiple_column_values — assign or mention users by id.",
        "create_update — mention or notify users in updates."
      ],
      "what kinds of queries are best for this tool": [
        "Locate a team member's monday.com user account (e.g., find 'Sean Khatiri') and obtain their user id or email.",
        "Resolve user ids returned in board/activity responses to actionable IDs for mutations."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "Searches by profile fields not exposed here — use all_monday_api or provide an email if name search fails.",
        "Finding external/guest users not visible to the token or scoped out by permissions."
      ],
      "what are the outputs of this tool": [
        "List of user objects: id, name and email (when returned).",
        "Empty list when no matches or an error if token lacks user read permission.",
        "Rate-limit/complexity errors (COMPLEXITY_BUDGET_EXHAUSTED/429) with suggested retry-after info when available."
      ],
      "which tools to call if this tool is not successful": [
        "all_monday_api (users query) — to search by email, use paging, or request additional fields.",
        "Ask the user to provide an email or more identifying info (last name, team) if name search yields no results."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (users query) — more control, paging and field selection."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_users_by_name for quick name lookups.",
        "Use all_monday_api when you need paging, email-based lookups, or extra user metadata."
      ]
    },
    "all_monday_api": {
      "description of the tool": "Execute arbitrary monday.com GraphQL queries and mutations. Provide the full query/mutation text and a JSON-encoded variables string. Use when helper tools do not cover needed fields/operations — but inspect schema first (get_graphql_schema/get_type_details).",
      "what is a description of the arguments of the tool": [
        "query (string) — Full GraphQL query or mutation text (required).",
        "variables (string) — JSON-encoded variables object (required)."
      ],
      "which other tools are commonly used with this tool": [
        "get_graphql_schema — inspect available queries/mutations and types before calling.",
        "get_type_details — inspect input and object types to craft correct field selections and variable shapes.",
        "get_column_type_info — to build valid columnSettings when creating/updating columns.",
        "read_docs — for doc-related exports or to fetch document markdown when needed."
      ],
      "what kinds of queries are best for this tool": [
        "Custom or complex GraphQL queries/mutations not exposed by helper functions (custom field selections, cross-board queries).",
        "Operations requiring precise control of requested fields or complex input objects (create/update columns, docs, batch operations)."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "None in principle — it can run any supported GraphQL operation. Practical constraints: invalid fields/types produce validation errors; complexity/rate limits still apply.",
        "It does not auto-paginate or parse results; you must manage pagination and parsing yourself."
      ],
      "what are the outputs of this tool": [
        "Raw GraphQL JSON response (data and/or errors) exactly as returned by the monday.com API.",
        "Errors may include USER_UNAUTHORIZED/403, INTERNAL_SERVER_ERROR/500, COMPLEXITY_BUDGET_EXHAUSTED/429, or validation errors — examine errors and request_id to decide next steps."
      ],
      "which tools to call if this tool is not successful": [
        "get_graphql_schema and get_type_details — verify schema, field names and required input types to fix validation errors.",
        "get_column_type_info — to build valid columnSettings when creating columns.",
        "If USER_UNAUTHORIZED, re-check token permissions or ask the user to re-authorize the integration; if COMPLEXITY_BUDGET_EXHAUSTED/429, reduce fields/split the query and retry with backoff."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "Helper functions (get_board_info, read_docs, create_board, create_doc, get_board_items_by_name) — they wrap common GraphQL operations with conveniences and partial validation."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Prefer helper functions for common tasks — they handle validation, parse responses, and manage common pagination or defaults.",
        "Use all_monday_api when helpers don't expose the fields or operations you need, or when you need custom/multi-object queries."
      ]
    },
    "get_graphql_schema": {
      "description of the tool": "Fetch the monday.com GraphQL schema overview (list of query & mutation root fields and types). Optionally filter for read (queries) or write (mutations). Use first when planning custom all_monday_api requests.",
      "what is a description of the arguments of the tool": [
        "operationType (string) — 'read' to list queries or 'write' to list mutations (optional).",
        "random_string (string) — dummy parameter when no operationType provided (optional)."
      ],
      "which other tools are commonly used with this tool": [
        "get_type_details — drill into a specific type returned by the schema.",
        "all_monday_api — to craft and run queries once you know the available operations.",
        "get_column_type_info — to reconcile column-type JSON schemas with GraphQL types when creating/updating columns."
      ],
      "what kinds of queries are best for this tool": [
        "Explore available top-level queries and mutations and discover types/input objects.",
        "Find exact query/mutation names and high-level usage notes before crafting all_monday_api requests."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "It returns schema/type info only — not runtime data.",
        "It cannot replace actual data queries; use helper functions or all_monday_api to fetch data."
      ],
      "what are the outputs of this tool": [
        "Schema listing: top-level query and mutation names, available GraphQL types and short descriptions.",
        "When filtering by operationType you get only queries (read) or only mutations (write) — useful to reduce complexity when introspecting."
      ],
      "which tools to call if this tool is not successful": [
        "get_type_details — fetch specifics for a single type if overview is insufficient.",
        "Retry later or use a smaller operationType-filtered call if you see COMPLEXITY_BUDGET_EXHAUSTED; include a short delay before retrying."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "get_type_details — for deeper per-type inspection."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_graphql_schema for a schema-wide overview (queries/mutations list).",
        "Use get_type_details for field-by-field details for a specific type/input."
      ]
    },
    "get_column_type_info": {
      "description of the tool": "Return the JSON schema and metadata for a specific column type (status, dropdown, date, numbers, doc, board_relation, mirror, etc.). Use before create_column or update_column to craft valid columnSettings/defaults and to understand relation/mirror configuration.",
      "what is a description of the arguments of the tool": [
        "columnType (string enum) — The column type to inspect (e.g., 'text', 'status', 'date', 'numbers', 'doc', 'board_relation', 'mirror')."
      ],
      "which other tools are commonly used with this tool": [
        "create_column — provide correct columnSettings when creating a new column.",
        "get_board_info — check an existing board's columns to avoid duplicates and get board-specific IDs.",
        "all_monday_api / get_type_details — inspect GraphQL input types for advanced scenarios or validation."
      ],
      "what kinds of queries are best for this tool": [
        "Understand exact JSON structure, allowed keys and validation rules for a given column type (status labels, dropdown options, relation settings, mirror settings).",
        "Prepare settings payload that the API expects when creating or updating a column."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "It does not create or update columns — only returns the schema to be used by create_column or update_column.",
        "It does not return existing column instances on a particular board — use get_board_info for that."
      ],
      "what are the outputs of this tool": [
        "JSON schema / metadata describing the column type's configuration properties, required/optional fields and allowed values.",
        "Examples for some types (labels/options) and notes about validation rules.",
        "Errors for unknown column types or permission issues (USER_UNAUTHORIZED) including request_id."
      ],
      "which tools to call if this tool is not successful": [
        "get_type_details — inspect GraphQL input object definitions if JSON schema is missing or ambiguous.",
        "all_monday_api — call get_column_type_schema or test a minimal create_column with proper permissions to validate behavior.",
        "If you get USER_UNAUTHORIZED, check token permissions or ask the user to grant the needed scope."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "get_type_details (for GraphQL input object definitions) and all_monday_api (to call schema queries directly)."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_column_type_info to get the JSON schema you will use in create_column or update_column calls.",
        "Use get_type_details when you need the GraphQL input type definition instead of a JSON settings schema."
      ]
    },
    "get_type_details": {
      "description of the tool": "Fetch detailed GraphQL type information (fields, field args, descriptions) for a specific type name. Use to precisely craft queries or validate mutation inputs (field names, arg types, required fields).",
      "what is a description of the arguments of the tool": [
        "typeName (string) — Exact GraphQL type name to inspect (e.g., 'Board', 'Item', 'Mutation')."
      ],
      "which other tools are commonly used with this tool": [
        "get_graphql_schema — discover which types exist and where they are used.",
        "all_monday_api — to run queries/mutations using the discovered types.",
        "get_column_type_info — to reconcile JSON schema and GraphQL input types when building column settings."
      ],
      "what kinds of queries are best for this tool": [
        "Obtain field lists, argument definitions and descriptions for GraphQL object and input types.",
        "Confirm required/optional fields and argument shapes before sending mutations (reduce type/field errors)."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "It does not return runtime data; it returns only type metadata.",
        "It cannot replace helper functions that return parsed runtime data for common operations."
      ],
      "what are the outputs of this tool": [
        "Type kind (OBJECT/INPUT/ENUM/SCALAR), fields with types, descriptions and argument lists for fields that accept arguments.",
        "Usage notes about default values/required fields when available."
      ],
      "which tools to call if this tool is not successful": [
        "get_graphql_schema — refresh the schema overview if the type is missing or the schema changed.",
        "Retry or consult monday.com docs/support if schema endpoints return errors (COMPLEXITY_BUDGET_EXHAUSTED or INTERNAL_SERVER_ERROR)."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "get_graphql_schema for a broader schema overview."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use get_type_details for deep inspection of a single type (fields & arguments).",
        "Use get_graphql_schema for a high-level list of available operations."
      ]
    },
    "read_docs": {
      "description of the tool": "Retrieve monday.com documents and their content (markdown/blocks). Supports pagination and three ID filter types (ids, object_ids, workspace_ids). Use when you need document markdown for summaries, exports or to attach/share links.",
      "what is a description of the arguments of the tool": [
        "ids (object) — { type: 'ids'|'object_ids'|'workspace_ids', values: [string] } (required).",
        "limit (number) — Number of docs per page (default 25).",
        "order_by (string) — Ordering, e.g., 'created_at' or 'used_at'.",
        "page (number) — Page number for pagination (starts at 1)."
      ],
      "which other tools are commonly used with this tool": [
        "workspace_info — to find workspace IDs or doc placements first.",
        "get_board_items_by_name / get_board_info — identify items whose object_id you might lookup in docs.",
        "all_monday_api — for custom doc queries or export behavior if read_docs has transient problems."
      ],
      "what kinds of queries are best for this tool": [
        "Fetch doc content (markdown) for specific docs by id/object_id, or list docs in a workspace (workspace_ids) with pagination.",
        "Export docs for backup, conversion, or to include markdown content in chat or updates."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "Free-text search across all docs — you must iterate workspace_ids or use a custom all_monday_api search.",
        "Requests returning more than the per-call limit without pagination — use page and continue if has_more_pages is true."
      ],
      "what are the outputs of this tool": [
        "Array of document metadata: id, object_id, name, doc_kind (public/private/share), created_at, created_by, url, workspace_id, doc_folder_id and blocks/markdown (when available).",
        "Pagination metadata and has_more_pages indicator when present.",
        "Errors when the docs API returns INTERNAL_SERVER_ERROR/500, USER_UNAUTHORIZED/403, or complexity/rate-limit issues (includes request_id)."
      ],
      "which tools to call if this tool is not successful": [
        "workspace_info — confirm workspace id and existence of docs.",
        "all_monday_api — craft a custom docs query or use export_markdown_from_doc if read_docs returns server errors.",
        "If you get INTERNAL_SERVER_ERROR or COMPLEXITY_BUDGET_EXHAUSTED, retry with smaller limit/page or later; if USER_UNAUTHORIZED, check token permissions."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (docs query / export_markdown_from_doc) — more flexible and can be used if read_docs has transient failures or you need extra fields."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use read_docs for straightforward workspace-scoped doc retrieval with built-in pagination guidance.",
        "Use all_monday_api when you need fields or export behavior not supported by read_docs or want to filter differently."
      ]
    },
    "workspace_info": {
      "description of the tool": "Return up to 100 boards, docs and folders inside a specified workspace along with their folder placements. Good for a quick inventory of a workspace (returns up to 100 of each type; if you receive 100 assume there are more).",
      "what is a description of the arguments of the tool": [
        "workspace_id (number) — Workspace to inspect (required)."
      ],
      "which other tools are commonly used with this tool": [
        "list_workspaces — pick the workspace id before calling.",
        "read_docs — fetch markdown for docs listed by workspace_info.",
        "get_board_info — drill into a particular board returned by workspace_info."
      ],
      "what kinds of queries are best for this tool": [
        "Get a bounded inventory (<=100 each of boards/docs/folders) for a workspace to see what to act on next.",
        "Locate a board or doc to open or modify and to find folder ids for create_doc placement."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "Return more than 100 objects of each type — use all_monday_api if you need >100 or archived/closed objects.",
        "Return doc markdown content — use read_docs to fetch actual content."
      ],
      "what are the outputs of this tool": [
        "Lists of boards, docs and folders in the workspace: id, name and folder ids where applicable (up to 100 each).",
        "If the workspace is inaccessible or API has a transient error you may see INTERNAL_SERVER_ERROR/500 — retry or run smaller per-object queries."
      ],
      "which tools to call if this tool is not successful": [
        "list_workspaces — confirm the workspace id and you have access.",
        "all_monday_api — run separate smaller queries (boards, docs, folders) if workspace_info returns server errors or complexity issues.",
        "Retry later or split into smaller requests if INTERNAL_SERVER_ERROR or COMPLEXITY_BUDGET_EXHAUSTED occurs."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (custom queries for boards/docs/folders) — can return more than 100 or include archived objects."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use workspace_info for a convenient quick inventory (<=100 objects).",
        "Use all_monday_api if you need additional fields, archived/closed objects, or results beyond the 100-object limit."
      ]
    },
    "list_workspaces": {
      "description of the tool": "List all workspaces available to the API token (returns up to 500). Use to discover workspace IDs you can target for board/doc creation or queries.",
      "what is a description of the arguments of the tool": [
        "No arguments — call with an empty parameter object."
      ],
      "which other tools are commonly used with this tool": [
        "workspace_info — inspect contents of a workspace you selected from the list.",
        "create_board / create_doc — to create objects in a chosen workspace.",
        "read_docs — to fetch or search docs after you select a workspace."
      ],
      "what kinds of queries are best for this tool": [
        "Show available workspaces and their IDs so you can choose where to create boards or run workspace-scoped queries."
      ],
      "what kinds of queries cannot be satisfied with this tool": [
        "It does not return boards/docs/folders inside each workspace — use workspace_info or all_monday_api for contents.",
        "It does not paginate beyond 500 workspaces."
      ],
      "what are the outputs of this tool": [
        "Array of workspace objects: id, name and description (when available), up to 500 entries.",
        "Empty array or error if token lacks workspace read permission."
      ],
      "which tools to call if this tool is not successful": [
        "all_monday_api (workspaces query) — attempt a custom listing or include extra fields.",
        "Check token permissions if USER_UNAUTHORIZED or retry after backoff if you hit COMPLEXITY_BUDGET_EXHAUSTED."
      ],
      "what other tools (if any) offer similar functionality to this tool": [
        "all_monday_api (workspaces query) — for advanced fields or paging behavior."
      ],
      "when to use other similar tools (if any) compared to this tool": [
        "Use list_workspaces to quickly enumerate available workspaces.",
        "Use all_monday_api if you need additional workspace fields or behavior not returned by the helper."
      ]
    }
  }
}